allCodeLinks/Ideone.com

==
1.1: Implement an algorithm to determine if a string has all unique characters. What if
you cannot use additional data structures?
http://ideone.com/RucLX8
http://ideone.com/FjXmgR

==
1.2ï¼šImplement a function void reversef(char* str) in java which reverses a null-terminated string.
http://ideone.com/pOzuRe

==
1.3: Given two strings, write a method to decide if one is a permutation of the other.
http://ideone.com/VGfnUG
http://ideone.com/4eWV0q

==
1.4: Write a method to replace all spaces 
in a string with '%20'. 
You may assume that the string 
has sufficient space at the end 
of the string to hold the additional 
characters, and that you are given the 
"true" length of the string. 
(Note: if implementing in Java, 
please usea character array so that 
you can perform this operation inplace.)
http://ideone.com/EXO0vn

==
1.5: Implement a method to perform basic string compression using the counts
of repeated characters. For example, the string a a b c c c c c a a a would become a2blc5a3. If the "compressed" string would not become smaller than the original string, your method should return the original string.
http://ideone.com/K7xDgt
http://ideone.com/bG9s1H

==
1.6: Given an image represented by an NxN matrix, 
where each pixel in the image is 4
bytes, write a method to rotate the image by 90 degrees. 
Can you do this in place?
http://ideone.com/TSU0qN

==
1.7: Write an algorithm such that if an element in an MxN matrix is 0,
its entire row and column are set to 0.
http://ideone.com/I15PoS

==
1.8: Assume you have a method isSubstring which 
 checks if one word is asubstring of another. 
 Given two strings, si and s2, write code to check Ifs2 is 
 a rotation of si using only onecalltoisSubstring
 (e.g., "waterbottLe" is a rotation of "erbot- tLewat").
http://ideone.com/AOfwuY

==
2.1: Write code to remove duplicates from an unsorted linked list. FOLLOW UP
How would you solve this problem if a temporary buffer is not allowed?
http://ideone.com/3Hv6Rb

==
2.2: Implement an algorithm to 
find the kth to last element of a singly linked list.
http://ideone.com/dyuz5o

==
3.1: Describe how you could use a single array to implement three stacks.
http://ideone.com/VsHFxZ
http://ideone.com/cpajdM
http://ideone.com/9CyGlN

==
4.1: Implement a function to check if a binary tree is balanced. For the
purposes of this question, a balanced tree is defined to be a tree such that
the heights of the two subtrees of any node never differ by more than one.
http://ideone.com/R3yq6M

==
5.1: You are given two 32-bit numbers,N and M, 
and two bit positions, i and j. 
Write a method to insert M into N such that 
M starts at bit j and ends at bit i. 
You can assume that the bits j through i have 
enough space to fit all of M. 
That is,if M= 10011, you can assume that there are 
at least 5 bits between j and i. 
You would not, for example,have j-3 and i=2,
because M could not fully fit between bit3 and bit2.
EXAMPLE:
Input:N=16000000000, M=10011, i =2, j =6 Output: N = 10001001100
http://ideone.com/oaI4hu

==
7.3: Given two lines on a Cartesian plane, determine whether the two lines would inter-
sect.
http://ideone.com/VMwGsg

==
8.1: Design the data structures for a generic deck of cards. Explain how you would
subclass the data structures to implement blackjack.

==
9.1: A child is running up a staircase with n steps, 
and can hop either 1step, 2 steps, or 3 steps 
 at a time. Implement a method to count 
 how many possible ways the child can run up the stairs.
http://ideone.com/scg2PN
